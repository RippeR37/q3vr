name: Build
on:
  push:
    branches:
      - master
      - develop
      - release/*
    tags:
      - '*'
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: '18 0 1 * *'

jobs:
  linux:
    name: Linux
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install libsdl2-dev libxcb-glx0-dev
    - name: Compile
      run: |
        cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Release
        cmake --build build
        echo "VERSION=$(cat build/version.txt)" >> $GITHUB_ENV
        cpack --config build/CPackConfig.cmake -B build/installer --verbose
        mv build/installer/*.deb build/Release
    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.event.repository.name }}-linux-${{ env.VERSION }}
        path: |
          build/Release/**/*
  windows-msvc:
    name: Windows MSVC
    runs-on: windows-2022
    steps:
    - uses: actions/checkout@v4
    - name: Compile
      run: |
        cmake -S . -B build -G "Visual Studio 17 2022"
        cmake --build build --config Release
        $version = Get-Content build/version.txt -Raw
        Add-Content -Path $env:GITHUB_ENV -Value "VERSION=$version"
        dir .
        dir build
        dir build\Release
        dir build\Release\baseq3
        Get-ChildItem -Path . -Filter *.exe -Recurse -File
        cpack --config build/CPackConfig.cmake -B build/installer --verbose
        Move-Item -Path "build/installer/*.exe" -Destination "build/Release"
    - name: Upload portable
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.event.repository.name }}-windows-msvc-${{ env.VERSION }}-portable
        path: |
          build/Release/**/*.dll
          build/Release/**/q3vr.exe
          build/Release/**/*.qvm
          build/Release/**/*.pk3
          build/Release/**/COPYING.txt
    - name: Upload installer
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.event.repository.name }}-windows-msvc-${{ env.VERSION }}-installer
        path: |
          build/Release/**/q3vr-*-installer.exe
  windows-mingw:
    name: Windows MinGW
    runs-on: windows-2022
    steps:
    - uses: actions/checkout@v4
    - name: Compile
      run: |
        cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Release
        cmake --build build
        $version = Get-Content build/version.txt -Raw
        Add-Content -Path $env:GITHUB_ENV -Value "VERSION=$version"
        cpack --config build/CPackConfig.cmake -B build/installer --verbose
        Move-Item -Path "build/installer/*.exe" -Destination "build/Release"
    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.event.repository.name }}-windows-mingw-${{ env.VERSION }}-portable
        path: |
          build/Release/**/*.dll
          build/Release/**/q3vr.exe
          build/Release/**/*.qvm
          build/Release/**/*.pk3
          build/Release/**/COPYING.txt
    - name: Upload installer
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.event.repository.name }}-windows-mingw-${{ env.VERSION }}-installer
        path: |
          build/Release/**/q3vr-*-installer.exe
  macos:
    name: macOS
    runs-on: macos-13
    steps:
    - uses: actions/checkout@v4
    - name: Import Code Signing Certificate
      if: github.ref_name == 'main'
      run: |
        misc/ci-macos-import-codesign-cert.sh
        echo "APPLE_CERTIFICATE_ID=${{ secrets.APPLE_CERTIFICATE_ID }}" >> $GITHUB_ENV
      env:
        APPLE_CERTIFICATE_P12_BASE64: ${{ secrets.APPLE_CERTIFICATE_P12_BASE64 }}
        APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
    - name: Compile
      run: |
        cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Release
        cmake --build build
        echo "VERSION=$(cat build/version.txt)" >> $GITHUB_ENV
        cpack --config build/CPackConfig.cmake -B build/installer --verbose
        mv build/installer/*.dmg build/Release
    - name: Notarize
      if: github.ref_name == 'main'
      run: |
        misc/ci-macos-notarize.sh build/Release/*.dmg
      env:
        APPLE_NOTARIZATION_USERNAME: ${{ secrets.APPLE_NOTARIZATION_USERNAME }}
        APPLE_NOTARIZATION_PASSWORD: ${{ secrets.APPLE_NOTARIZATION_PASSWORD }}
        APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.event.repository.name }}-macOS-${{ env.VERSION }}
        path: |
          build/Release/**/*
